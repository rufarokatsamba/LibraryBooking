// <auto-generated />
using System;
using Library.Integration.Books;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library.Integration.Migrations
{
    [DbContext(typeof(BooksDbContext))]
    [Migration("20240824082702_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("inventory")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Library.Integration.Books.Models.SqlBookModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Available")
                        .HasColumnType("int");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Edition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Books", "inventory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4b07a08-a880-4b74-9c6f-05b6d3b643fc"),
                            Author = "Book 1 Author",
                            Available = 1,
                            BookName = "Book 1",
                            Category = 0,
                            Edition = "First Edition",
                            Isbn = "123",
                            Publisher = "Book 1 Publishers"
                        },
                        new
                        {
                            Id = new Guid("03ede358-9230-4043-a311-1dd8cb4d5822"),
                            Author = "Book 2 Author",
                            Available = 1,
                            BookName = "Book 2",
                            Category = 0,
                            Edition = "First Edition",
                            Isbn = "1234",
                            Publisher = "Book 2 Publishers"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
